library(shiny)
runExample("01_hellp")
runExample("01_hello")
runExample("01_hello")
getOption("browser")
Sys.setenv("R_BROWSER")
Sys.setenv("R_BROWSER","firefox")
options(browser = "/usr/bin/firefox")
getOption("browser")
runExample("01_hello")
  C-c C-c
  C-c C-c  C-c C-c
mtcars$am
mtcars$gear
library(shiny)
library(shiny)
runExample("01_hellp")
runExample("01_hello")
shiny::runExample("01_hello")
csv <- as_tibble(read.csv("~/downloads/MatchAnalysis-Excl.csv"))
csv
gna <- read.csv("~/downloads/MatchAnalysis-Excl.csv")
gna
test <- read.csv("~/volley_stats/data/first_match.csv")
test
as_tibble(test)
test <- read.csv("~/volley_stats/data/first_match.csv")
as_tibble(test)
test
test <- read.csv("~/volley_stats/data/first_match.csv")
test
as_tibble(test)
test <- read.csv("~/volley_stats/data/first_match.csv")
test
as_tibble(test)
test <- read.csv("~/volley_stats/data/first_match.csv")
test
test <- read.csv("~/volley_stats/data/first_match.csv")
test
test <- read.csv("~/volley_stats/data/first_match.csv")
test
as_tibble(test)
data
data[!data$Set]
data[,!data$Set]
data[,!Set]
data[,! Set]
data[,! set]
names(data) 
data[,!"Set"]
data[,-"Set"]
data[,! "Set"]
data["Set"]
data[!"Set"]
data[-"Set"]
data[,!(names(data) %in% c("Set")]
data[,!(names(data) %in% c("Set"))]
(names(data) %in% c("Set"))
data[,!(names(data) %in% c("Set"))]
data[-2]
data[-2,-14]
grouped_data
grouped_data
plot(grouped_data)
grouped_data
plot(grouped_data)
data
grouped_data
 test_plot
grouped_data[1:3]
 test_plot
 test_plot
data
names(data)
3/1 
data_norm_attack
data_norm_attack
data_norm_attack
data_norm_attack
data_norm_attack["attackK"]
grouped_data[1:3]
grouped_data
grouped_data[,(names(grouped_data) %in% c("Player","attack_kills"))]
std
std()
std
pippo
pippo
sum(pippo$Attack_n)
sum(grouped_data$Attack_n)
grouped_data
pippo
pippo$attack_kills
pippo$attack_kills
pippo$attack_kills
is.zero
is.zero(0)
is.na(9)
is.na(0)
pippo$attack_kills
pippo$attack_kills
pippo
pippo$attack_kills
.
pippo$attack_kills
my_mean(pippo$attack_kills)
is.na
pippo$attack_kills[!is.na]
pippo$attack_kills[is.na]
pippo$attack_kills[is.na()]
pippo$attack_kills[is.nan(pippo$attack_kills)]
pippo$attack_kills[!is.nan(pippo$attack_kills)]
my_mean(pippo$attack_kills)
mean(pippo$attack_kills)
pippo
pippo$attack_kills
pippo$attack_kills
grouped_data
show(grouped_data)
View(grouped_data)
position
position
full_join(data,position)
full_join(data,position)$Position
full_join(data,position)$Position
cip(list.files(path = "~/volley_stats/data",
                      full.names = TRUE, recursive = TRUE))
cip(list.files(path = "~/volley_stats/data",
                      full.names = TRUE, recursive = TRUE))
cip(list.files(path = "~/volley_stats/data",
                      full.names = TRUE, recursive = TRUE))$Position
read_all_data(list.files(path = "~/volley_stats/data",

                      full.names = TRUE, recursive = TRUE))$Position
gna <- read_all_data("~/volley_stats/data")
gna
gna[-1]
gna[]
gna[Position,Player]
gna[c(Position,Player)]
gna[c("Position","Player")]
last(gna[c("Position","Player")])
gna <- read_all_data("~/volley_stats/data")
last(gna[c("Position","Player")])
gna <- read_all_data("~/volley_stats/data")
gna[c("Position","Player")]
gna <- read_all_data("~/volley_stats/data")
gna
gna$Position
position
data
data$Position
sum_set
sum_set
sum_set
data[1:]
data[1:,]
data[,1]
data[,-1]
data[,!is.factor(data)]
data[,!is.factor]
data[,!is.factor(.)]
data[,!is.factor(names(data))]
and
reduce
reduce(&,c(TRUE))
reduce((&),c(TRUE))
check_row(data)
check_row(data)
data[,!names(data) %in% c("Set")]
data[1,!names(data) %in% c("Set")]
test_row <- data[1,!names(data) %in% c("Set")]
all(test_row == 0 | is.factor(test_row))
test_row <- data[11,!names(data) %in% c("Set")]
test_row
all(test_row == 0 | is.factor(test_row))
all(test_row[,!names(test_row) %in% c("Player","Position","Opponent")] == 0 | is.factor(test_row))
all(is.factor(test_row))
all(is.factor(test_row))
is.factor(test_row)
apply(is.factor,test_row)
apply(test_row,1,is.factor)
apply(test_row,is.factor)
apply(test_row,funis.factor)
 sapply
 sapply?
?sapply
?sapply
sapply(X=test_row,FUN=is.factor)
lapply(X=test_row,FUN=is.factor)
sapply(X=test_row,FUN=is.factor)
test_row[,!names(test_row) %in% c("Player","Position","Opponent")] == 0
all(test_row[,!names(test_row) %in% c("Player","Position","Opponent")] == 0 | sapply(FUN=is.factor,X=test_row))
all(test_row == 0 | sapply(FUN=is.factor,X=test_row))
check_row(data)
check_row(data)
check_row(data)
check_row(data)
check_row(data)

> sapply(X=test_row,FUN=is.factor)

> sapply(X=test_row,FUN=is.factor)
sapply(X=test_row,FUN=is.factor)
sapply(X=test_row,FUN=is.factor) | test_row == 0
all(sapply(X=test_row,FUN=is.factor) | test_row == 0)
popo <- function(row) all(row == 0 | sapply(X=row,FUN=is.factor))
popo(test_row)
apply(data[,!names(data) %in% c("Set")],1,popo(test_row))
apply(data[,!names(data) %in% c("Set")],1,popo)
data[,!names(data) %in% c("Set")]
apply(data[,!names(data) %in% c("Set")],1,print)
check_row(data)
check_row(data)
check_row(data)
popo <- function(row) all(row == 0 | sapply(X=row,FUN=is.factor))
data[1,]
popo(data[1,])
popo(data[11,])
popo(data[11,!names(data)%in% c("Set")])
popo(data[1,!names(data)%in% c("Set")])
check_row(data)
data[which(function(row))]
which
which(rowSum(data)>0)
which(RowSum(data)>0)
which(rowSums(data)>0)
which(rowSums(data)>0 | is.factor(data))
check_row(data)
check_row(data)
check_row(data)
check_row(data)
warnings()
warnings()
check_row(data)
check_row(data)
popo <- function(row) 
                        as.numeric(row) %>% all(. == 0 | is.na(.))
popo(data[1,!names(data)%in% c("Set")])
popo(data[11,!names(data)%in% c("Set")])
popo <- function(row) 
                        as.numeric(row) %>% . == 0 | is.na(.)
popo(data[11,!names(data)%in% c("Set")])
popo <- function(row) 
                        as.numeric(row) %>% ~ == 0 | is.na(~)
popo<- 
                    function(row)
                        all(as.numeric(row) == 0 | is.na(as.numeric(row)))
popo(data[11,!names(data)%in% c("Set")])
popo(data[1,!names(data)%in% c("Set")])
as.numeric(row) == 0
all(as.numeric(row) == 0)
all(as.numeric(data[1,!names(data)%in% c("Set")]) == 0)
as.numeric(data[1,!names(data)%in% c("Set")])
as.numeric(data[1,!names(data)%in% c("Set")])
as.numeric(data[11,!names(data)%in% c("Set")])
as.numeric(data[,!names(data)%in% c("Set")])
data[,!names(data)%in% c("Set")]
data[9,!names(data)%in% c("Set")]
as.numeric(data[9,!names(data)%in% c("Set")])
data[9,!names(data)%in% c("Set")]
check_row(data)
data
sum_set
data[!check_row(data),]
sum_set
sum_set
sum_opp 
sum_opp 
sum_opp 
sum_opp 
sum_opp 
sum_opp 
sum_set 
filter(sum_set,sum_set$Player == "Massi")
filter(sum_set,sum_set$Player == "Massi")
filter(sum_set,Player == "Massi")
sum_opp
sum_opp
filter(sum_set,Player == "Lian")
sum_opp
sum_opp
mean_all
mean_all
sum_set 
clean_data
sum_set 
sum_set$ServeR_tot
 View(sum_set)
mean_all
mean_all
mean_all[8]
mean_all[8,]
View(mean_all)
View(mean_all[,-10])
View(t(mean_all))
View(add_prob)
View(t(add_prob))
FG
View(t(mean_all))
View(t(mean_all))
View(t(mean_all))
se
lenght
lenght(c(1,2))
len 
mean_all
names(mean_all)
mean_team
t(mean_team)
mean_team
t(mean_team)
mean_team
mean
mean_team
gather(mean_team,"metric","val")
mean_team
mean_team
mean_team
mean_team
team
mean_position
mean_position
mean_position
mean_position
mean_position
summary(mean_position)
mean_position
mean_position
mean_position
mean_position
mean_position
mean_position
mean_position
team
position
position
position
position
position
position
team
position
position
position
position <- ggplot(filter(mean_position,!Position %in% c("Libero","Setter") & metric %like% c("*a|*sn|*sk|*se")),
                   aes(Position,val,fill=Position,group=metric))+
    geom_col()+
    geom_errorbar(aes(ymin=val - se,ymax=val + se,width=.4))+

position
position
position
sum_set 
ball_distribution
    group_by(Position) %>%

ball_distribution
ball_distribution
ball_distribution
sum_ball
sum_ball
ball_distribution
ball_distribution
ball_dist_pos 
ball_count
ball_count
ball_count
ball_count
ball_count
ball_count
ball_count
trim
round
round(2.14)
round(2.14,digits=2)
round(2.14,digits=1)
round(2.14,digits=1)
ball_count
ball_count
position <- ggplot(filter(mean_position,!Position %in% c("Libero","Setter") & metric %like% c("*a|*sn|*sk|*se")),
                   aes(Position,val,fill=Position,group=metric,))+
position <- ggplot(filter(mean_position,!Position %in% c("Libero","Setter") & metric %like% c("*a|*sn|*sk|*se")),

position
filter_attacker(mean_position)
summary(filter_attacker(mean_position))
summary(filter_passer(mean_position))
h2?
?h2
?h2
shinyApp(
  ui = fluidPage(
    selectInput("variable", "Variable:",
                c("Cylinders" = "cyl",
                  "Transmission" = "am",
                  "Gears" = "gear")),
    tableOutput("data")
  ),
  server = function(input, output) {
    output$data <- renderTable({
      mtcars[, c("mpg", input$variable), drop = FALSE]
    }, rownames = TRUE)
  }
)
OT_tab <- tabItem(tabName = "tstats",

6/4
library(shiny)
mtcars$
?runApp
?shinyApp
?runApp
getOption("192.168.1.109")
getOption("shiny.host","192.168.1.109")
source("./src2/body.r")
quit()
n
